import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class SistemaCadastroAlunos {
    private static final String URL = "jdbc:postgresql://localhost:5432/postgres";
    private static final String USUARIO = "postgres";
    private static final String SENHA = "1234";

    public static Connection conectar() throws SQLException {
        try {
            Class.forName("org.postgresql.Driver");
        } catch (ClassNotFoundException e) {
            System.out.println("Erro ao carregar o driver JDBC do PostgreSQL: " + e.getMessage());
        }
        return DriverManager.getConnection(URL, USUARIO, SENHA);
    }

    public static void criarTabela() {
        String sql = "CREATE TABLE IF NOT EXISTS alunos ("
                + "id SERIAL PRIMARY KEY,"
                + "nome VARCHAR(100) NOT NULL,"
                + "nota FLOAT NOT NULL"
                + ")";

        try (Connection conn = conectar();
             Statement stmt = conn.createStatement()) {

            stmt.executeUpdate(sql);
            System.out.println("Tabela 'alunos' criada com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao criar tabela 'alunos': " + e.getMessage());
        }
    }

    public static void adicionarAluno(String nome, float nota) {
        String sql = "INSERT INTO alunos (nome, nota) VALUES (?, ?)";

        try (Connection conn = conectar();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, nome);
            pstmt.setFloat(2, nota);
            pstmt.executeUpdate();

            System.out.println("Aluno adicionado com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao adicionar aluno: " + e.getMessage());
        }
    }

    public static void listarAlunos() {
        String sql = "SELECT * FROM alunos";

        try (Connection conn = conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("Lista de Alunos:");
            while (rs.next()) {
                int id = rs.getInt("id");
                String nome = rs.getString("nome");
                float nota = rs.getFloat("nota");

                System.out.println("ID: " + id);
                System.out.println("Nome: " + nome);
                System.out.println("Nota: " + nota);
                System.out.println("------------------------");
            }

        } catch (SQLException e) {
            System.out.println("Erro ao listar alunos: " + e.getMessage());
        }
    }

    public static void atualizarAluno(int id, String novoNome, float novaNota) {
        String sql = "UPDATE alunos SET nome = ?, nota = ? WHERE id = ?";

        try (Connection conn = conectar();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, novoNome);
            pstmt.setFloat(2, novaNota);
            pstmt.setInt(3, id);
            pstmt.executeUpdate();

            System.out.println("Aluno atualizado com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao atualizar aluno: " + e.getMessage());
        }
    }

    public static void excluirAluno(int id) {
        String sql = "DELETE FROM alunos WHERE id = ?";

        try (Connection conn = conectar();
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, id);
            pstmt.executeUpdate();

            System.out.println("Aluno excluído com sucesso!");

        } catch (SQLException e) {
            System.out.println("Erro ao excluir aluno: " + e.getMessage());
        }
    }

    public static void listarAprovados() {
        String sql = "SELECT * FROM alunos WHERE nota >= 6";

        try (Connection conn = conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("Alunos Aprovados:");
            while (rs.next()) {
                int id = rs.getInt("id");
                String nome = rs.getString("nome");
                float nota = rs.getFloat("nota");

                System.out.println("ID: " + id);
                System.out.println("Nome: " + nome);
                System.out.println("Nota: " + nota);
                System.out.println("------------------------");
            }

        } catch (SQLException e) {
            System.out.println("Erro ao listar alunos aprovados: " + e.getMessage());
        }
    }

    public static void listarReprovados() {
        String sql = "SELECT * FROM alunos WHERE nota < 6";

        try (Connection conn = conectar();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("Alunos Reprovados:");
            while (rs.next()) {
                int id = rs.getInt("id");
                String nome = rs.getString("nome");
                float nota = rs.getFloat("nota");

                System.out.println("ID: " + id);
                System.out.println("Nome: " + nome);
                System.out.println("Nota: " + nota);
                System.out.println("------------------------");
            }

        } catch (SQLException e) {
            System.out.println("Erro ao listar alunos reprovados: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        criarTabela();

        adicionarAluno("João", 7.8f);
        adicionarAluno("Maria", 6.5f);
        adicionarAluno("Pedro", 5.2f);
        adicionarAluno("Ana", 8.9f);

        System.out.println("Todos os Alunos:");
        listarAlunos();

        System.out.println("Alunos Aprovados:");
        listarAprovados();

        System.out.println("Alunos Reprovados:");
        listarReprovados();

        atualizarAluno(3, "Lucas", 7.0f);

        System.out.println("Todos os Alunos Atualizados:");
        listarAlunos();

        excluirAluno(2);

        System.out.println("Todos os Alunos Após Exclusão:");
        listarAlunos();
    }
}
